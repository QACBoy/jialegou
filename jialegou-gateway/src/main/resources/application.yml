server:
  port: 10010
spring:
  application:
    name: api-gateway
  datasource:
    url: jdbc:mysql://localhost:3306/jialegou
    username: tester
    password: lkr.7664
  rabbitmq:
    virtual-host: /jialegou
    username: jialegou
    password: jialegou
    host: 192.168.43.219
eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka
    registry-fetch-interval-seconds: 5
  instance:
    instance-id: ${spring.application.name}:${server.port}
    prefer-ip-address: true  #当你获取host时，返回的不是主机名，而是ip
    ip-address: 127.0.0.1

zuul:
  prefix: /api # 添加路由前缀
  retryable: true
  routes:
    item-service: /item/**  #商品微服务
    search-service: /search/**  #搜索微服务
    users-service: /user/**  #用户微服务
    auth-service: /auth/** #授权中心微服务
    cart-service: /cart/** #购物车微服务
    order-service: /** #订单微服务
    seckill-service: /seckill/** #秒杀微服务
    comments-service: /review/** #评论微服务
    payment-service: /payment/** #支付微服务
    upload-service:
      path: /upload/**
      serviceId: upload-service
      strip-prefix: false
  ignored-services:
    - upload-service # 忽略upload-service服务
  add-host-header: true #携带请求本身的head头信息
  sensitive-headers: #匹配禁止使用的头信息，这里设置为null，否则set-cookie无效
ribbon:
  ConnectTimeout: 40000 # 连接超时时间(ms)
  ReadTimeout: 20000 # 通信超时时间(ms)
  OkToRetryOnAllOperations: true # 是否对所有操作重试
  MaxAutoRetriesNextServer: 1 # 同一服务不同实例的重试次数
  MaxAutoRetries: 1 # 同一实例的重试次数
hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMillisecond: 100000 # 熔断超时时长：10000ms
#feign:
#  client:
#    config:
#      feignName:          #服务名，填写 default 为所有服务
#        connectTimeout: 40000
#        readTimeout: 20000
jialegou:
  jwt:
    cookieName: JIALEGOU_TOKEN # cookie的名称
    pubKeyPath: /Users/sam/Documents/Developer/swe15086/jialegou/jialegou-auth/src/main/resources/key/rsa.pub # 公钥地址
  filter:
    allowPaths:
       /api/auth
       /api/search
       /api/user/register
       /api/user/check
       /api/user/code
       /api/item
       /api/payment/alipay
       /api/upload/image
       /zuul/api/upload/image